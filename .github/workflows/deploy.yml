name: create and push docker images

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      TARGET_DOMAIN: ${{ github.ref == 'refs/heads/main' && 'schaeferdevelopment.tech' || github.ref == 'refs/heads/dev' && 'localhost' || 'localhost' }}
      TARGET_PORT: ${{ github.ref == 'refs/heads/main' && '443' || github.ref == 'refs/heads/dev' && '80' || '3000' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate environment file
        run: |
          cat << EOF > .env
          AUTH_URL=http://${{ env.TARGET_DOMAIN }}:${{ env.TARGET_PORT }}/auth/login
          MONGO_DB_METRICS_USERNAME=${{ secrets.MONGO_DB_METRICS_USERNAME }}
          MONGO_DB_METRICS_PASSWORD=${{ secrets.MONGO_DB_METRICS_PASSWORD }}
          PROMETHEUS_CONFIG_PATH=/etc/prometheus/prometheus.yml
          PROMETHEUS_RELOAD_URL=http://prometheus:9090/-/reload
          TOKEN_REFRESH_INTERVAL_MINUTES=50
          TARGET_URL=${{ env.TARGET_DOMAIN }}:${{ env.TARGET_PORT }}
          LOG_LEVEL=INFO
          EOF

      - name: Clear Docker system cache
        run: |
          docker system prune -af
          docker builder prune -af

      - name: Build and push Docker images
        env:
          NODE_ENV: ${{ env.TAG }}
        run: |
          # Force remove any existing images with same tags
          docker compose -f docker-compose.yml -f docker-compose.${{ env.TAG }}.yml down --rmi all || true

          # Build with no cache and no build context reuse
          DOCKER_BUILDKIT=1 docker compose -f docker-compose.yml -f docker-compose.${{ env.TAG }}.yml build --no-cache --pull

          # Push the images
          docker compose -f docker-compose.yml -f docker-compose.${{ env.TAG }}.yml push
